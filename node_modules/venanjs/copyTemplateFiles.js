// copyTemplateFiles.js
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const templateDir = path.join(__dirname, 'public');
const destinationDir = path.join(__dirname, '..', '..', 'public');
const dockerTemplateDir = path.join(__dirname, 'docker-templates');
const projectRootDir = path.join(__dirname, '..', '..');
const packageTemplateDir = path.join(__dirname, 'templates');

function copyFiles(srcDir, destDir) {
  fs.readdir(srcDir, { withFileTypes: true }, (err, files) => {
    if (err) {
      console.error(`Error reading directory ${srcDir}:`, err);
      return;
    }

    files.forEach(file => {
      const srcFile = path.join(srcDir, file.name);
      const destFile = path.join(destDir, file.name);

      if (file.isDirectory()) {
        fs.mkdir(destFile, { recursive: true }, (err) => {
          if (err) {
            console.error(`Error creating directory ${destFile}:`, err);
            return;
          }

          copyFiles(srcFile, destFile);
        });
      } else {
        fs.copyFile(srcFile, destFile, (err) => {
          if (err) {
            console.error(`Error copying file ${srcFile} to ${destFile}:`, err);
          }
        });
      }
    });
  });
}

// Copy template files to public directory
fs.mkdir(destinationDir, { recursive: true }, (err) => {
  if (err) {
    console.error(`Error creating directory ${destinationDir}:`, err);
    return;
  }

  copyFiles(templateDir, destinationDir);
});

// Copy Dockerfile and docker-compose.yml to project root
fs.readdir(dockerTemplateDir, { withFileTypes: true }, (err, files) => {
  if (err) {
    console.error(`Error reading directory ${dockerTemplateDir}:`, err);
    return;
  }

  files.forEach(file => {
    const srcFile = path.join(dockerTemplateDir, file.name);
    const destFile = path.join(projectRootDir, file.name);

    fs.copyFile(srcFile, destFile, (err) => {
      if (err) {
        console.error(`Error copying file ${srcFile} to ${destFile}:`, err);
      } else {
        console.log(`Copied ${file.name} to project root`);
      }
    });
  });
});

// Copy all files from templates directory to project root
fs.readdir(packageTemplateDir, { withFileTypes: true }, (err, files) => {
  if (err) {
    console.error(`Error reading directory ${packageTemplateDir}:`, err);
    return;
  }

  files.forEach(file => {
    const srcFile = path.join(packageTemplateDir, file.name);
    const destFile = path.join(projectRootDir, file.name);

    fs.copyFile(srcFile, destFile, (err) => {
      if (err) {
        console.error(`Error copying file ${srcFile} to ${destFile}:`, err);
      } else {
        console.log(`Copied ${file.name} to project root`);
      }
    });
  });
});